name: (Cross)Compile AppFlowy Cloud
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "AppFlowy Cloud tag"
        required: true
        type: string
permissions:
  contents: write
jobs:
  cross-compile-appflowy-cloud:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - name: linux-arm64
            runner: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
    steps:
      - name: Checkout AppFlowy Cloud
        uses: actions/checkout@v4
        with:
          repository: AppFlowy-IO/AppFlowy-Cloud
          ref: ${{ inputs.tag }}
      - name: Prepare
        run: |
          sudo apt install -y gcc-aarch64-linux-gnu protobuf-compiler
          mkdir .cargo
          echo [target.aarch64-unknown-linux-gnu] >> .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"
      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
      - name: Build Appflowy Cloud
        run: cargo build --verbose --locked --release --bin appflowy_cloud --target ${{ matrix.target }}
      - name: Upload Appflowy Cloud
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-appflowy_cloud
          path: target/${{ matrix.target }}/release/appflowy_cloud
      - name: Build Admin Fronted
        run: |
          cd admin_frontend
          sed -i 's/reqwest = "0.11.27"/reqwest = { version = "0.11.27", features = ["native-tls-vendored"] }/g' Cargo.toml
          cargo build --verbose --locked --release --bin admin_frontend --target ${{ matrix.target }}
      - name: Upload Admin Fronted
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-admin_frontend
          path: target/${{ matrix.target }}/release/admin_frontend
      - name: Relese Appflowy Cloud
        uses: ncipollo/release-action@v1
        with:
          artifacts: target/${{ matrix.target }}/release/appflowy_cloud
          tag: ${{ matrix.target }}-appflowy_cloud-${{ inputs.tag }}
          allowUpdates: true
      - name: Relese Admin Fronted
        uses: ncipollo/release-action@v1
        with:
          artifacts: target/${{ matrix.target }}/release/admin_frontend
          tag: ${{ matrix.target }}-admin_frontend-${{ inputs.tag }}
          allowUpdates: true