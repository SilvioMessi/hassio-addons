name: Build AppFlowy Cloud container
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "AppFlowy Cloud tag"
        required: true
        type: string
jobs:
  build-appflowy-cloud-container:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platfom: linux/amd64
            image: ghcr.io/home-assistant/amd64-base:3.19
            arch: amd64
          - name: linux-arm64
            runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            platfom: linux/arm64
            image: ghcr.io/home-assistant/aarch64-base:3.19
            arch: aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Appflowy Cloud
        uses: robinraju/release-downloader@v1.10
        with:
          tag: ${{ matrix.target }}-appflowy_cloud-${{ inputs.tag }}
          fileName: appflowy_cloud
          out-file-path: appflowy_cloud/appflowy_cloud
      - name: Download Admin Fronted
        uses: robinraju/release-downloader@v1.10
        with:
          tag: ${{ matrix.target }}-admin_frontend-${{ inputs.tag }}
          fileName: admin_frontend
          out-file-path: appflowy_cloud/admin_frontend
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: ${{ matrix.arch }}-appflowy_cloud:${{ inputs.tag }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: appflowy_cloud
          file: appflowy_cloud/Dockerfile
          push: true
          build-args: BUILD_FROM=${{ matrix.image }}
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}