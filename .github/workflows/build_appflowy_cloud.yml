name: Build AppFlowy Cloud
on: [push]
jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: linux-arm64
            runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
    steps:
      - name: Checkout AppFlowy Cloud
        uses: actions/checkout@v4
        with:
          repository: AppFlowy-IO/AppFlowy-Cloud
          ref: "0.3.26"
      - name: Prepare
        run: |
          sudo apt install -y gcc-aarch64-linux-gnu protobuf-compiler libssl-dev
          mkdir .cargo
          echo [target.aarch64-unknown-linux-gnu] >> .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"
      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
      - name: Build Appflowy Cloud
        run: cargo build --verbose --locked --release --bin appflowy_cloud --target ${{ matrix.target }}
      - name: Upload Appflowy Cloud
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-appflowy_cloud
          path: target/${{ matrix.target }}/release/appflowy_cloud
      - name: Build Admin Fronted
        run: |
          cd admin_frontend
          cargo build --verbose --locked --release --bin admin_frontend --target ${{ matrix.target }}
      - name: Upload Admin Fronted
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-admin_frontend
          path: target/${{ matrix.target }}/release/admin_frontend
